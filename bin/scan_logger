#!/usr/bin/env ruby

require 'logger'
require_relative '../lib/log_listener'
require_relative '../lib/remote_api_listener'
require_relative '../lib/rfid_reader'

logger = Logger.new(STDOUT)
logger.level = Logger::DEBUG

if ARGV.size == 0
  listener = LogListener.new(logger)
elsif ARGV.size == 1
  listener = RemoteApiListener.new(logger, ARGV[0])
end

reader = RfidReader.new(listener, logger)
reader.open

trap 'TTIN' do
  Thread.list.each do |thread|
    puts "Thread TID-#{thread.object_id.to_s(36)}"
    puts thread.backtrace.join("\n")
  end
end

running = true
trap("SIGINT") do
  logger.info 'Shutting down...'
  reader.close
  running = false
end

while(running) do
  sleep 1
end
